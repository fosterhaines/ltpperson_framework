//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LTPPerson_Framework.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LTPEntities : DbContext
    {
        public LTPEntities()
            : base("name=LTPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<person> people { get; set; }
        public virtual DbSet<state> states { get; set; }
    
        public virtual ObjectResult<uspPersonSearch_Result> uspPersonSearch(Nullable<int> person_id, string first_name, string last_name, Nullable<int> state_id, string gender, Nullable<System.DateTime> dob)
        {
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("person_id", person_id) :
                new ObjectParameter("person_id", typeof(int));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var state_idParameter = state_id.HasValue ?
                new ObjectParameter("state_id", state_id) :
                new ObjectParameter("state_id", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspPersonSearch_Result>("uspPersonSearch", person_idParameter, first_nameParameter, last_nameParameter, state_idParameter, genderParameter, dobParameter);
        }
    
        public virtual int uspPersonUpsert(Nullable<int> person_id, string first_name, string last_name, Nullable<int> state_id, string gender, Nullable<System.DateTime> dob)
        {
            var person_idParameter = person_id.HasValue ?
                new ObjectParameter("person_id", person_id) :
                new ObjectParameter("person_id", typeof(int));
    
            var first_nameParameter = first_name != null ?
                new ObjectParameter("first_name", first_name) :
                new ObjectParameter("first_name", typeof(string));
    
            var last_nameParameter = last_name != null ?
                new ObjectParameter("last_name", last_name) :
                new ObjectParameter("last_name", typeof(string));
    
            var state_idParameter = state_id.HasValue ?
                new ObjectParameter("state_id", state_id) :
                new ObjectParameter("state_id", typeof(int));
    
            var genderParameter = gender != null ?
                new ObjectParameter("gender", gender) :
                new ObjectParameter("gender", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("dob", dob) :
                new ObjectParameter("dob", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspPersonUpsert", person_idParameter, first_nameParameter, last_nameParameter, state_idParameter, genderParameter, dobParameter);
        }
    
        public virtual ObjectResult<uspStatesList_Result> uspStatesList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspStatesList_Result>("uspStatesList");
        }
    }
}
